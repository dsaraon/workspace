package client;

import java.util.HashMap;
import java.util.Map;
import java.util.Observable;
import java.util.Observer;

//This should be the main View class 
//Initially singly-threaded

public class View implements Observer{
	
	private Client client;
	private Map<Integer, PrivateChatGUI> privateChatMap = new HashMap<Integer, PrivateChatGUI>();
	private Map<Integer, TeamChatGUI> teamChatMap = new HashMap<Integer, TeamChatGUI>();
	private LoginGUI loginGUI; 
	private MainGUI mainGUI;
	
	/**
	 * Constructor
	 * @param client
	 */
	public View(Client client){
		this.client = client;
		//addObserver
		client.addObserver(this);
		//run client thread here
		Thread clientThread = new Thread(client);
		clientThread.start();
		
		loginGUI = new LoginGUI(client);
	
	}
	//second constructor with chatWindow
	
	@Override
	public void update(Observable o, Object arg) {
		
		if (o instanceof Client) {
			GUIMessage message = (GUIMessage)arg;
			switch(message.getStatus()){
			case LOGGED_IN:
				//launch main GUI
				mainGUI = new MainGUI(client);//see how "username" may be used to populate this GUI
				
				break;
			case ACCOUNT_CREATED:
				break;
			case ACCOUNT_CREATED_FAIL:
				break;
			case ADD_MEMBER:
				break;
			case ALL_PRIVATE_CHATS:
				break;
			case ALL_TEAM_CHATS:
				break;
			case ALL_USERS:
				break;
			case DISPLAY_MESSAGE:
				break;
			case ERROR:
				break;
			case HISTORY:
				break;
			case LEAVE_TEAM:
				break;
			case LOGIN_FAIL:
				break;
			case MAKE_TEAM:
				break;
			case REMOVE_MEMBER:
				break;
			case START_PRIVATE_CHAT:
				ChatWindow chatWindow = (ChatWindow) message.getObject();
				PrivateChatGUI privateChat = new PrivateChatGUI(chatWindow);
				Integer threadID = chatWindow.getThreadID();
				privateChatMap.put(threadID, privateChat);//should this use chatID? threadID?
				break;
			case USERS_ONLINE:
				break;
			case VIEW_ACCOUNT:
				break;
			default:
				break;
			}
		}
		
	}

	
	//main method to run the GUI
	public static void main(String args[]){
		
		Client newClient = new Client(args[0], Integer.parseInt(args[1]));	
		View viewMain = new View(newClient);
		
	}

		
}
