package general;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.Observable;
import java.util.Observer;

import javax.imageio.ImageIO;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;


public class ChatGUI extends JFrame implements Observer, ActionListener {
	
	/**
	 * Serial Version
	 */
	private static final long serialVersionUID = 1L;

	// Add a Model
	//private Model model; // Declare Model (Backend)
	
	// Set up Fonts
	Font font = new Font("Calibri", Font.BOLD, 16);
	
	// Setup Main Frame
	JPanel main = new JPanel();
	
	// Setup Row 1 - Message History
	JPanel row1 = new JPanel();
	JTextArea mainText = new JTextArea(15, 35);
	
	// Setup Row 2 - Send new Message
	JPanel row2 = new JPanel();
	JTextArea sendText = new JTextArea(6, 30);
	JButton sendMessage = new JButton("Send");
	
	
	/**
	 * Constructor for GUI
	 * @param model - Backend driving the output
	 */
	
	public ChatGUI() {
		super("DevChat"); // Create new Frame with title
		//this.model = model; // Integrate GUI with backend
		//model.addObserver(this); // Setup observer with observable
		//setLookAndFeel(); // Call setLookAndFeel method to change to Nimbus
		setSize(500, 500); // Set Size
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); // Close Operation
		//GridLayout layout = new GridLayout(3, 1, 20, 20); // Create GridLayout 4x1
		BoxLayout box = new BoxLayout(main, BoxLayout.Y_AXIS);
		main.setLayout(box); // Set Layout
		
		// Setup Row 1 - Message History
			mainText.setEditable(false);
			row1.add(mainText);
			mainText.setLineWrap(true);
			mainText.setWrapStyleWord(true);
			mainText.setFont(font);
			// Add Scroll Pane with no sliders
			JScrollPane scroll = new JScrollPane(mainText,
					JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,
					JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
			row1.add(scroll); // Add components to panel
			main.add(row1); // Add Panel to Frame
				
		// Setup Row 2 - Send Message
			row2.setLayout(new FlowLayout());
			row2.add(sendText); // Add Send Textbox
			sendText.setLineWrap(true);
			sendText.setWrapStyleWord(true);
			sendText.setFont(font);
			// Add Scroll Pane with no sliders
			JScrollPane scroll2 = new JScrollPane(sendText,
					JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,
					JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
			row2.add(scroll2); // Add components to panel
			row2.add(sendMessage); // Add Send Message Button
			main.add(row2); // Add Panel to Frame
				
		// Add Action Listeners
			sendMessage.addActionListener(this); // Send Button Action
		
		add(main); // Add main frame
		
		setVisible(true); // Make Frame Visible
	}
	
	/**
	 * Set look and feel to Nimbus - Looks much nicer!
	 */

	private void setLookAndFeel() {
		try {
			UIManager.setLookAndFeel("com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel");
		} catch (ClassNotFoundException | InstantiationException
				| IllegalAccessException | UnsupportedLookAndFeelException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	/**
	 * Execute instance methods in Model dependent upon which button has been clicked
	 */
	
	@Override
	public void actionPerformed(ActionEvent arg0) {
		// insertclassname.addstr(
	}

	/**
	 * Method called when the observable object changes (in this case when text output changes)
	 */

	@Override
	public void update(Observable o, Object arg) {
	//	if (o instanceof Model) {
            mainText.setText("" + arg); // "" Sets the arg to string type
     //   }
		
	}
	
	public static void main(String[] args) {
		ChatGUI test = new ChatGUI(); // Start GUI
	}

}
