Diary.

24/02/15
TEAM MEETING: Full group in attendence. 

ASK CORY : ARE WE ALLOWED TO USE THIRD PARTY API'S - (Update: Completed 26/02 - YES).

Specification:
 - Dev chat.
 - BASE GOAL:	
        - Build basic messaging system.
 - STRETCH GOALS:
	- Multiple people in chats
	- More than one chat open at the same time
	- Opening links
	- integrate a similar format to codshare.io.
 - Need to set out guidelines clearly
	- Requirements (thinking of user etc)
	- Information / structure of databases
	- Communication methods are key.
 - Not number 6 on the spec.

ORGANISATION:
 - Team Structure: 
	(with flexibilty)
	Harry - GUI. Jess - Client. Divyjyot - Client / GUI (flexy) Sam - JDBC / Databases. Anna - Server/Sockets.

 - Architecture:
	- Standard.
	- Model/Client , View/GUI	
	
 - Protocols 
	- May be a starting point.
	- will determine what everything else needs.
	- will help break into teams.

26/02/15
MEETING WITH CORY:Full group in attendence. 
- Most of our current stretch goals should be basic goals. Only strectch goals 
  at the moment are code/ pictures (but if we cna achieve the code bit we are awesome)
- WARNING: Links may have problems working across differents.
- Mention about work history / write work flow.
- Text, Login, Instrucitons. Work on protocol, what will be sent across with each message?
- Have a clear goal od how different parts are communicating/ how things are sent between elements. (Update - conducted meetings)
- getChatHistory()
- THERE SHOULD NEVER BE A BARE DB CALL IN PROGRAM.
- HANDLERS - these will be important for making sure when we add funcitonality nothind goes wrong.
- Get a skeleton uploaded for next Thursday/Friday. (For Handlers or for methods. Having communication between 
  Client and Server implemented).


TEAM MEETING: Full group in attendence. 

Organisation:
- Conduct seperate meetings to figure out protocols/ what is needed to be communicated between different areas.
	- Weekend: Divyjyot and Anna to discuss Server/Client.
	- Monday: Anna & Sam to discuss Server/DB, Sam & Jess to discuss DB/Client

Architecture:
- How information was to be organised an sent/recieved:
	Sending Stuff - Sending Java objects? Object to be sent from Client to Server - Server deconstructs to send to SQL.
	This avoids the issues that Threads do not send stuff in an order.

Database:
	- Within DB side can create paired statements - SQL query with ? for bits you want to change.
	- DB Class with methods to Call. 
	- Will store time stamp for messages to help order them.

Chat issues:
- Discussed how we were going to arrange the "responsibility of chats". This was important as we wanted to be able to keep groups open after one
  person left. It raised issues of ownership and of privacy (i.e. if someone was to join would they see teh previous conversation etc.).

	- We are going to attempt to make two categories of chat messages - private and group.
	- Private chats will be between two people. Only those two people will be able to access chat history.
	- Group chats will be between 3+ people. Chat history will be open for searching.
	- For each chat, each time a person joins or goes, it makes a different chat ID. 
	- A chat history will be saved an relayed between two people. If another person joins, from then on it is saved as a group chat with a seperate ID.
	This should mean if two people are chatting and a third is added, it will become a group chat and the previosu history of the  original two will not be shown.
	- To achieve this, if a group chat is started (more than 1 person added to a conversation) the chat will open in a new window.

	- Privacy for group chats shouldn't be an issue as the program is designed for a professional network and is designed to work inhouse.
	
Possible Stretch Goals:
	- GUI: different colours for the two types of chat.
	- Being able to hide messages?

28/02/15

Anna/Divyjyot uploaded to SVN:
	- An initial Java version of the protocol
	- Text version of the protocol
	- Some classes necessary for writing protocol but currently don't do anything
	- A text file containing some design issues we need to discuss.
	
02/02/15
Sam/Jess Meeting: 

GROUP CHAT QUESTIONS:
Group chat for each team? But then what about cross team communication / access?
Chat rooms seems to be best for group otherwise multiple windows will have to be opened.

GUI considerations:
- Search boxes (language, username, department(?))
- Search by date for group chat.
- Profile - Separate screen, hover over to get box, right click to get profile??
- Chat rooms for groups? 
- Set up a group, enter team ID, team name.
	- need separate admin screen.
- Maybe an opening screen with options (I.e Start Private Chat, Start Group Chat, Search
	For Chat, Admin Options, Edit Profile).

Client: 
- Admin methods.
- Customisable - setting methods (colour etc)?

Objects server to client:
 - basic information object
 - Should we limit group size for group chats?
 - Need to make USER object

Connection Errors:
-If connection drops out for short period so message can't be sent - error or try again y/n?
Re-establishing connection protocol. - need something in server to check if their online.

Privacy and Login:
- user_ID never visible to user, username would be visible.
- LOGIN: create new user object with ______. See if it matches what's on database.
