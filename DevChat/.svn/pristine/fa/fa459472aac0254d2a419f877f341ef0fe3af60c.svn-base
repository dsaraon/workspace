package client;

import general.Account;

import java.awt.BorderLayout;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.util.Observable;
import java.util.Observer;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

public class CreateAccountGUI extends JFrame implements Observer, ActionListener, FocusListener {
	
	/**
	 * Serial Version
	 */
	private static final long serialVersionUID = 1L;
	
	static final private String CREATE = "create";
	static final private String CANCEL = "cancel";
	
	private Client client; // Declare Model (Backend)
	
	// Declare Components
	JButton createButton;
	JButton cancelButton;
	JTextField username;
	JPasswordField password;
	JTextField email;
	JTextField firstName;
	JTextField lastName;
	JTextField languages;
	JTextField location;
	JTextField company;
	JTextField jobTitle;
	JTextField website;
	JTextField personalInfo;
	
	public CreateAccountGUI(Client client) {
//	public CreateAccountGUI() {
		
		//Create and set up the window.
		super("Create Account"); // Create new Frame with title
		setSize(400, 400); // Set Size
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); // Close Operation
		setResizable(false);
		JPanel main = new JPanel(); // Create and initialise JPanel
		JPanel buttons = new JPanel(); // Bottom row buttons
		Font font = new Font("Calibri", Font.BOLD, 14); // Default Font
		//Font font2 = new Font("Calibri", Font.BOLD, 18);
		
		// Integrate GUI with backend
		this.client = client; 
		client.addObserver(this);
		
		// Setup Components
		this.setLayout(new BorderLayout());
		main.setLayout(new GridBagLayout());
		buttons.setLayout(new GridLayout(1, 2));
		GridBagConstraints c = new GridBagConstraints();
		// Labels
		JLabel accountInfo  = new JLabel("<HTML><U>Account Info.</U></HTML>", JLabel.RIGHT);
		JLabel personalInfoLabel  = new JLabel("<HTML><U>Personal Info.</U></HTML>", JLabel.RIGHT);
		JLabel userNameLabel = new JLabel("User Name:", JLabel.RIGHT);
		JLabel passwordLabel = new JLabel("Password:", JLabel.RIGHT);
		JLabel emailLabel = new JLabel("E-mail:", JLabel.RIGHT);
		JLabel firstNameLabel = new JLabel("First Name:", JLabel.RIGHT);
		JLabel lastNameLabel = new JLabel("Last Name:", JLabel.RIGHT);
		JLabel languagesLabel = new JLabel("Languages:", JLabel.RIGHT);
		JLabel locationLabel = new JLabel("Location:", JLabel.RIGHT);
		JLabel companyLabel = new JLabel("Company Name:", JLabel.RIGHT);
		JLabel jobTitleLabel = new JLabel("Job Title:", JLabel.RIGHT);
		JLabel websiteLabel = new JLabel("Website:", JLabel.RIGHT);
		JLabel personalInfo2Label = new JLabel("Personal Info.:", JLabel.RIGHT);
		userNameLabel.setFont(font);
		accountInfo.setFont(font);
		personalInfoLabel.setFont(font);
		passwordLabel.setFont(font);
		emailLabel.setFont(font);
		firstNameLabel.setFont(font);
		lastNameLabel.setFont(font);
		languagesLabel.setFont(font);
		locationLabel.setFont(font);
		companyLabel.setFont(font);
		jobTitleLabel.setFont(font);
		websiteLabel.setFont(font);
		personalInfo2Label.setFont(font);
		
		// Buttons
		createButton = new JButton("Create Account");
		createButton.setActionCommand(CREATE);
		createButton.setToolTipText("Create Account");
		createButton.addActionListener(this);
		createButton.setEnabled(false);
		createButton.setFont(font);
		cancelButton = new JButton("Cancel");
		cancelButton.setActionCommand(CANCEL);
		cancelButton.setToolTipText("Cancel");
		cancelButton.addActionListener(this);
		cancelButton.setFont(font);
		
		// Text Entry
		username = new JTextField(15);
		password = new JPasswordField(15);
		email = new JTextField(15);
		email.addFocusListener(this);
		firstName = new JTextField(15);
		lastName = new JTextField(15);
		languages = new JTextField(15);
		location = new JTextField(15);
		company = new JTextField(15);
		jobTitle = new JTextField(15);
		website = new JTextField(15);
		personalInfo = new JTextField(15);

		// Setup Individual Grid Cells
		//c.insets = new Insets(0,10,0,0); // 20 Pixels in column
		//c.anchor = GridBagConstraints.LINE_END;
		//c.fill = GridBagConstraints.HORIZONTAL;
		//c.anchor = GridBagConstraints.PAGE_START;
		
		// Adding Labels
		c.gridx = 0;
		c.gridy = 0;
		c.anchor = GridBagConstraints.PAGE_START;
		main.add(accountInfo, c);
		
		c.gridx = 0;
		c.gridy = 1;
		c.anchor = GridBagConstraints.LINE_END;
		main.add(userNameLabel, c);
		
		c.gridx = 0;
		c.gridy = 2;
		c.anchor = GridBagConstraints.LINE_END;
		main.add(passwordLabel, c);
		
		c.gridx = 0;
		c.gridy = 3;
		c.anchor = GridBagConstraints.LINE_END;
		main.add(emailLabel, c);
		
		c.gridx = 0;
		c.gridy = 4;
		c.anchor = GridBagConstraints.LINE_END;
		main.add(personalInfoLabel, c);
		
		c.gridx = 0;
		c.gridy = 5;
		c.anchor = GridBagConstraints.LINE_END;
		main.add(firstNameLabel, c);
		
		c.gridx = 0;
		c.gridy = 6;
		c.anchor = GridBagConstraints.LINE_END;
		main.add(lastNameLabel, c);
		
		c.gridx = 0;
		c.gridy = 7;
		c.anchor = GridBagConstraints.LINE_END;
		main.add(languagesLabel, c);
		
		c.gridx = 0;
		c.gridy = 8;
		c.anchor = GridBagConstraints.LINE_END;
		main.add(locationLabel, c);
		
		c.gridx = 0;
		c.gridy = 9;
		c.anchor = GridBagConstraints.LINE_END;
		main.add(companyLabel, c);
		
		c.gridx = 0;
		c.gridy = 10;
		c.anchor = GridBagConstraints.LINE_END;
		main.add(jobTitleLabel, c);
		
		c.gridx = 0;
		c.gridy = 11;
		c.anchor = GridBagConstraints.LINE_END;
		main.add(websiteLabel, c);
		
		c.gridx = 0;
		c.gridy = 12;
		c.anchor = GridBagConstraints.FIRST_LINE_END;
		main.add(personalInfo2Label, c);
		
		// Adding Text Fields
		c.gridx = 1;
		c.gridy = 1;
		c.insets = new Insets(0,10,0,0);
		c.anchor = GridBagConstraints.LINE_START;
		main.add(username, c);
		
		c.gridx = 1;
		c.gridy = 2;
		c.insets = new Insets(0,10,0,0);
		c.anchor = GridBagConstraints.LINE_START;
		main.add(password, c);
		
		c.gridx = 1;
		c.gridy = 3;
		c.insets = new Insets(0,10,0,0);
		c.anchor = GridBagConstraints.LINE_START;
		main.add(email, c);
		
		c.gridx = 1;
		c.gridy = 5;
		c.insets = new Insets(0,10,0,0);
		c.anchor = GridBagConstraints.LINE_START;
		main.add(firstName, c);
		
		c.gridx = 1;
		c.gridy = 6;
		c.insets = new Insets(0,10,0,0);
		c.anchor = GridBagConstraints.LINE_START;
		main.add(lastName, c);
		
		c.gridx = 1;
		c.gridy = 7;
		c.insets = new Insets(0,10,0,0);
		c.anchor = GridBagConstraints.LINE_START;
		main.add(languages, c);
		
		c.gridx = 1;
		c.gridy = 8;
		c.insets = new Insets(0,10,0,0);
		c.anchor = GridBagConstraints.LINE_START;
		main.add(location, c);
		
		c.gridx = 1;
		c.gridy = 9;
		c.insets = new Insets(0,10,0,0);
		c.anchor = GridBagConstraints.LINE_START;
		main.add(company, c);
		
		c.gridx = 1;
		c.gridy = 10;
		c.insets = new Insets(0,10,0,0);
		c.anchor = GridBagConstraints.LINE_START;
		main.add(jobTitle, c);
		
		c.gridx = 1;
		c.gridy = 11;
		c.insets = new Insets(0,10,0,0);
		c.anchor = GridBagConstraints.LINE_START;
		main.add(website, c);
		
		c.gridx = 1;
		c.gridy = 12;
		c.insets = new Insets(0,10,20,0);
		c.anchor = GridBagConstraints.FIRST_LINE_START;
		main.add(personalInfo, c);
		
		// Add Buttons
		buttons.add(createButton);
		buttons.add(cancelButton);
		
		add(main, BorderLayout.NORTH);
		add(buttons, BorderLayout.CENTER);
		setVisible(true); // Make Frame Visible
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		String cmd = e.getActionCommand();
		
		switch(cmd){
		case CREATE:
			// Enter code for create account
			//How are we passing Languages ? 
			Account newAccount = new Account(username.getText(), password.getText(), email.getText(),
											firstName.getText(), lastName.getText(), languages.getText(), location.getText(),
											company.getText(), jobTitle.getText(), website.getText(), personalInfo.getText());
			client.createAccount(newAccount);
		case CANCEL:
			setVisible(false);
		    dispose();
		}
	}

	@Override
	public void update(Observable o, Object arg) {
		if (o instanceof Client) {
			GUIMessage message = (GUIMessage)arg;
			switch(message.getStatus()){
			case ACCOUNT_CREATED:
				setVisible(false);
				dispose();//do we need this? since it won't be used by this user again
				// launch main GUI from View
				break;
			case ACCOUNT_CREATED_FAIL:
				JOptionPane.showMessageDialog(this,//use rootPane instead?
					    "Invalid information. Please check again!",
					    "Invalid info error",
					    JOptionPane.ERROR_MESSAGE);
			}
			
		}
	}
	
	/**
	 * Method called when user wants to reset the create account form 
	 * TODO: CREATE A BUTTON TO CALL THIS METHOD 
	 */
	private void reset(){
		username.setText("");
		password.setText("");
		email.setText("");
		firstName.setText("");
		lastName.setText("");
		languages.setText("");
		location.setText("");
		company.setText("");
		jobTitle.setText("");
		website.setText("");
		personalInfo.setText("");
	}
	
	@Override
	public void focusGained(FocusEvent e) {
		
	}

	@Override
	public void focusLost(FocusEvent e) {
		Object source = e.getSource();
		if(source == email){
			if(!username.equals("") && !password.equals("") && !email.equals("")){
				createButton.setEnabled(true);
			}
		}
	}
	
	public static void main(String[] args) {
//		CreateAccountGUI test = new CreateAccountGUI();
	}

}
