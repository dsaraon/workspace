package server;
import general.Message;

import java.io.*;
import java.net.Socket;
import java.util.concurrent.LinkedBlockingQueue;


public class Connection {
	
	private Server server;
	private LinkedBlockingQueue<Message> queue;
	private int sessionID;
	private Thread listener;
	private Thread writer;
	
	public Connection(Server server, Socket socket, int sessionID) throws IOException {
		this.server = server;
		this.queue = new LinkedBlockingQueue<Message>();
		this.sessionID = sessionID;

		ObjectOutputStream out = new ObjectOutputStream(socket.getOutputStream());
		out.flush();
		ObjectInputStream in = new ObjectInputStream(socket.getInputStream());
	
		this.listener = new Thread(new Listener(this, new Protocol(sessionID, server), in));
		this.writer = new Thread(new Writer(out, queue));
		this.listener.start();
		this.writer.start();
	}
	
	
	public void sendMessage(Message message) { //synchronise?
		queue.add(message);
	}
	

	public void stop() {
		listener.interrupt();
		writer.interrupt();
		//and...
		server.removeConnection(sessionID);
	}
	

}
