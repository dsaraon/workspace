package client.gui;
<<<<<<< .mine

=======
import general.ChatMessage;
import general.Message;

>>>>>>> .r49
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.Observable;
import java.util.Observer;

import javax.imageio.ImageIO;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

<<<<<<< .mine
=======
import client.Client;


>>>>>>> .r49
public class LoginGUI extends JFrame implements Observer, ActionListener {

	/**
	 * Serial Version
	 */
	private static final long serialVersionUID = 1L;
	
	static final private String LOGIN = "login";
	static final private String CREATE_ACCOUNT= "createAccount";

	// Add a Model
<<<<<<< .mine
	// private Model model; // Declare Model (Backend)

=======
	private Client client; // Declare Model (Backend)
	
>>>>>>> .r49
	// Set up Fonts
	Font font = new Font("Calibri", Font.BOLD, 18);

	// Setup Main Panel
	JPanel main = new JPanel();

	// Set up Row 1 - Picture
	JPanel row1 = new JPanel();

	// Set up Row 2 - Username
	JPanel row2 = new JPanel();
	JLabel userNameLabel = new JLabel("User Name:", JLabel.RIGHT);
	JTextField userName = new JTextField();

	// Set up Row 3 - Password
	JPanel row3 = new JPanel();
	JLabel passWordLabel = new JLabel("Password:", JLabel.RIGHT);
	JPasswordField passWord = new JPasswordField();

	// Set up Row 4 - Buttons
	JPanel row4 = new JPanel();
	JButton signInButton = new JButton("Sign In"); // Sign in button
	JButton createAccountButton = new JButton("Create Account"); // Create
																	// Account
																	// button

	/**
	 * Constructor for GUI
	 * 
	 * @param model
	 *            - Backend driving the output
	 */

	public LoginGUI(Client client) {
		super("DevChat"); // Create new Frame with title
<<<<<<< .mine
		// this.model = model; // Integrate GUI with backend
		// model.addObserver(this); // Setup observer with observable
		// setLookAndFeel(); // Call setLookAndFeel method to change to Nimbus
=======
		this.client = client; // Integrate GUI with backend
		client.addObserver(this); // Setup observer with observable
		//setLookAndFeel(); // Call setLookAndFeel method to change to Nimbus
>>>>>>> .r49
		setSize(250, 450); // Set Size
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); // Close Operation
		// GridLayout layout = new GridLayout(3, 1, 20, 20); // Create
		// GridLayout 4x1
		BoxLayout box = new BoxLayout(main, BoxLayout.Y_AXIS);
		main.setLayout(box); // Set Layout

		// Setup Row 1 - Logo
<<<<<<< .mine
		try {
			logo = ImageIO.read(new File("devchatlogo.png"));
		} catch (IOException e) {
		}
		JLabel picLabel = new JLabel(new ImageIcon(logo));
		row1.add(picLabel);
=======
		row1.add(Help.createPicture("devchatlogo.png")); // Add logo
>>>>>>> .r49
		main.add(row1);

		// Setup Row 2 - Username
		row2.add(userNameLabel);
		row2.add(userName);
		userNameLabel.setFont(font);
		userName.setFont(font);
		userName.setPreferredSize(new Dimension(200, 26));
		main.add(row2);

		// Setup Row 3 - Password
		row3.add(passWordLabel);
		row3.add(passWord);
		passWordLabel.setFont(font);
		passWord.setFont(font);
		passWord.setPreferredSize(new Dimension(200, 26));
		main.add(row3);

		// Setup Row 4 - Sign In & Create Account Buttons
		// Sign In Button
		signInButton.setActionCommand(LOGIN);
		signInButton.setToolTipText("Sign In");
		signInButton.addActionListener(this);
		signInButton.setFont(font);
		row4.add(signInButton);
		
		// Create Account Button
		createAccountButton.setActionCommand(CREATE_ACCOUNT);
		createAccountButton.setToolTipText("Create New Account");
		createAccountButton.addActionListener(this);
		createAccountButton.setFont(font);
		row4.add(createAccountButton);

		main.add(row4);

		add(main); // Add Main Panel to Frame
		setVisible(true); // Make Frame Visible
	}

	/**
	 * Set look and feel to Nimbus - Looks much nicer!
	 */

	private void setLookAndFeel() {
		try {
			UIManager
					.setLookAndFeel("com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel");
		} catch (ClassNotFoundException | InstantiationException
				| IllegalAccessException | UnsupportedLookAndFeelException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		String cmd = e.getActionCommand();
<<<<<<< .mine
=======
		
		switch(cmd){
		case LOGIN:
			// Add code for login
			break;
		case CREATE_ACCOUNT:
			// Add code for create account
			// CreateAccountGUI create = new CreateAccountGUI(client);
			break;
		}
	}

>>>>>>> .r49

	}

	@Override
	public void update(Observable o, Object arg) {
		if (o instanceof Client) {
			Message message = (Message)arg;
			switch(message.getStatus()){
			case SUCCESS:
				// Start new MainGUI passing username as argument?
				// Close LoginGUI - setVisible(false)?
				// or frame.dispatchEvent(new WindowEvent(frame, WindowEvent.WINDOW_CLOSING));
				break;
			case ERROR:
				
				break;
			}
        }

	}

	public static void main(String[] args) {
		//Client client = new Client();
		//LoginGUI test = new LoginGUI(client); // Start GUI
	}

}
